@model iep_newer.Models.Auction

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using(Html.BeginForm("Create", "Auction", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Auction</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @*@Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-2">
                Name:
            </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                </div>
            </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.duration, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-2">
                Duration(seconds):
            </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.duration, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.duration, "", new { @class = "text-danger" })
                </div>
            </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.starting_price, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-2">
                Starting price(tokens):
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.starting_price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.starting_price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.image_file, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-2">
                Image:
            </div>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.image_file, new { type = "file", @required = true })
                    @Html.ValidationMessageFor(model => model.image_file, "", new { @class = "text-danger" })
                </div>
            </div>

        @*<div class="form-group">
        @Html.LabelFor(model => model.created, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.created, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.created, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.opened, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.opened, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.opened, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.closed, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.closed, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.closed, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.state, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.state, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.image, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.current_price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.current_price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.current_price, "", new { @class = "text-danger" })
        </div>
    </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
