@{
    ViewBag.Title = "Home Page";
}

<div class="row">
    <div class="col-md-6">
    @using (Html.BeginForm("Index", "Home", FormMethod.Get))
    {
        <div id="custom-search-input">
            <div class="input-group col-md-12" >
                <input id="search_terms" name="search_terms" type="text" class="form-control input-lg" placeholder="Auction search"  />
                <span class="input-group-btn">
                    <button class="btn btn-info btn-lg" type="submit">
                        <i class="glyphicon glyphicon-search"></i>
                    </button>
                </span>
            </div>
        </div>

        <div class ="row" style="margin-top:10px">
            @if (User.Identity.IsAuthenticated && !User.IsInRole("admin"))
            {
                Object args = new { search_self = true, search_terms = ViewBag.search_terms, search_state = ViewBag.search_state, min_price = ViewBag.min_price, max_price = ViewBag.max_price, };
                @Html.ActionLink("See my won auctions", "Index", args, new { @class = "btn btn-warning self-button col-md-4 col-md-offset-1" });
            }

            <button onclick="$('#demo').toggle()" type="button" class="btn btn-primary advanced-seach-button col-md-6">Advanced search options</button>

        </div>
        

        <div id="demo" hidden="hidden" >
            <div class="row" style="margin-top:10px; margin-left:0px">
                <h3 style="display:inline">Price: </h3>
                <input id="min_price" name="min_price" class="form-control" placeholder="Min" type="number" style="display:inline; width:80px" />
                <h3 style="display:inline"> - </h3>
                <input id="max_price" name="max_price" class="form-control" placeholder="Max" type="number" style="display:inline; width:80px" />
            </div>
            <div class="row" style="margin-top:10px; margin-left:0px;">
                <h3 style="display:inline">State: </h3>
                <select class="form-control" id="search_state" name="search_state" style="display:inline; width:140px;">
                    <option value="@iep_newer.Models.Auction.State.ALL"> All </option>
                    <option value="@iep_newer.Models.Auction.State.READY"> Ready </option>
                    <option value="@iep_newer.Models.Auction.State.OPEN"> Open </option>
                    <option value="@iep_newer.Models.Auction.State.SOLD"> Sold </option>
                    <option value="@iep_newer.Models.Auction.State.EXPIRED"> Expired </option>
                </select>
            </div>
        </div>
    }
    </div>
    <div class="col-md-offset-3 col-md-3">
        <img src="~/Content/komodo-dragon-clip-art1-830x368.png" style="height:110px" />
    </div>
</div>

<hr />

<div class="row"> 
    <div class="row">
        @foreach (var item in Model)
        {
            <div class="col-md-3 portfolio-item" id="auction-@item.id">
                <div class="portfolio-inside" >

                    <!-- Auction item name -->
                    <div class="item-name-wrapper">
                        @item.name
                    </div>

                    <!-- Auction main image -->
                    <div class="img-wrapper">
                        <a href="#">
                            <span class="helper" ></span>
                            <img class="helper-img img-rounded img-responsive" src="data:image;base64,@System.Convert.ToBase64String(item.image)" />
                        </a>
                    </div>
                    
                    <!-- Auction time and button, depending on auction state -->
                    @if (item.state == iep_newer.Models.Auction.State.SOLD)
                    {

                        <div class="row time-text-wrapper">
                            <h2 class="not-time-text">00:00:00</h2>
                        </div>

                        <button class="btn btn-info interaction-button not-open-text" disabled="disabled">Sold!</button>

                    } else if (item.state == iep_newer.Models.Auction.State.EXPIRED)
                    {

                        <div class="row time-text-wrapper">
                            <h2 class="not-time-text">00:00:00</h2>
                        </div>

                        <button class="btn btn-info interaction-button not-open-text" disabled="disabled">Expired!</button>

                    } else if (item.state == iep_newer.Models.Auction.State.READY)
                    {

                        <div class="row time-text-wrapper">
                            <h2 class="not-time-text">--:--:--</h2>
                        </div>

                        <button class="btn btn-info interaction-button not-open-text" disabled="disabled">Not yet open!</button>

                    } else if (item.state == iep_newer.Models.Auction.State.OPEN)
                    {

                        <div class="row time-text-wrapper">
                            <h2 class="time-text">@item.closed.Subtract(DateTime.Now).ToString(@"hh\:mm\:ss")</h2>
                        </div>

                        if (User.Identity.IsAuthenticated && !User.IsInRole("admin"))
                        {
                            <button class="btn btn-success interaction-button bid-button" onclick="bidAuction(@item.id, this)">Bid!</button>
                        } else
                        {
                            <button class="btn btn-danger interaction-button bid-button" disabled="disabled" onclick="bidAuction(@item.id, this)">Bid!</button>
                        }

                    }

                    <!-- Auction price -->
                    <div class="row price-row">
                        <h3 class="current-price-text">Price:</h3>
                        <div class="current-price-wrapper">
                            <h3 class="current-price">@item.current_price</h3>
                        </div>
                        <img class="current-price-img" src="~/Content/Thunder-T.png">
                    </div>

                    <!-- Show bidders if there's any, or show BE FIRST ONE for opened auction without bidders-->
                    @if (item.Bids.Count > 0)
                    {
                        <div class="row last-bidder-wrapper">
                            <h4 style="display:inline;">Last bidder: </h4>
                            <h4 class="last-bidder">@item.last_bid_user.Name</h4>
                        </div>
                    } else if (item.state == iep_newer.Models.Auction.State.OPEN)
                    {
                        <div class="row be_first_one" style="width:100%; margin-top:10px; margin-left:10px">
                            <h4 class="be_first_one">Be the first one to bid!</h4>
                        </div>
                    }

                    <!-- Show open auction and edit auction button for admin -->
                    @if (User.IsInRole("admin") && (item.state == iep_newer.Models.Auction.State.READY))
                    {
                        <div class="row">
                            <button class="btn btn-info col-md-offset-2 col-md-3" onclick="openAuction(@item.id, this, @item.duration)" style="font-size:14px;">Open!</button>
                            @*<button class="btn btn-warning col-md-offset-2 col-md-3" onclick="openAuction(@item.id, this, @item.duration)" style="font-size:14px;">Edit</button>*@
                            @Html.ActionLink("Edit", "Edit", "Auction", new { id = item.id }, new { @class = "btn btn-warning col-md-offset-2 col-md-3", @style = "font-size:14px;" })
                        </div>
                    }
                </div>
            </div>
        }
    </div>

    <hr>

    <!-- Pagination -->
    <div class="row text-center">
        <div class="col-lg-12">
            <ul class="pagination">
                <li>
                    <a href="#">&laquo;</a>
                </li>
                @for(int pagenum = 0; pagenum < ViewBag.pages; pagenum ++)
                {
                    <li>
                        @{
                            Object args = new {
                                search_self = ViewBag.search_self,
                                search_terms = ViewBag.search_terms,
                                search_state = ViewBag.search_state,
                                min_price = ViewBag.min_price,
                                max_price = ViewBag.max_price,
                                page = pagenum,
                            };
                        @Html.ActionLink(Convert.ToString(pagenum+1), "Index", args);
                    }
                    </li>
                }
                <li>
                    <a href="#">&raquo;</a>
                </li>
            </ul>
        </div>
    </div>
    <!-- /.row -->
    
    <script type="text/javascript">

        // Helper function for jquery selectors, $(".sth").exists()
        $.fn.exists = function () {
            return this.length !== 0;
        }

        // Set countdown for each time-text
        $(function () {
            $(".time-text").each(function () {
                var that = this;

                var timer = setInterval(function () {

                    // Countdown should stop
                    if (that.innerHTML == "00:00:00") {

                        clearInterval(timer);

                        var correct_button = $(that).parent().parent().find(".bid-button");

                        correct_button.removeClass('btn-danger').removeClass('btn-success').addClass('btn-info');

                        if (!correct_button.parent().find(".last-bidder").exists()) {
                            correct_button.html("Expired");
                            correct_button.parent().find(".be_first_one").hide();
                        }
                        else {
                            correct_button.html("Sold!");
                        }
                    } else {
                        var timeToSet = formatTime(getDuration(that.innerHTML) - 1);
                        $(that).html(timeToSet);
                    }
                }, 1000)
            })
        });

        // Helper functions for formating time for countdown
        function formatTime(duration) {
            var hours = parseInt(duration / 3600),
            remainder = duration % 3600,
            minutes = parseInt(remainder / 60),
            seconds = remainder % 60;

            var hoursStr = hours + "";
            if (hours < 10) hoursStr = "0" + hoursStr;
            var minutesStr = minutes + "";
            if (minutes < 10) minutesStr = "0" + minutesStr;
            var secondsStr = seconds + "";
            if (seconds < 10) secondsStr = "0" + secondsStr;

            return (hoursStr + ":"
                    + minutesStr + ":"
                    + secondsStr);
        }

        function getDuration(time) {
            var arr = time.split(":");

            var seconds = (+arr[0]) * 60 * 60 + (+arr[1]) * 60 + (+arr[2]);

            return seconds;
        }

        // Function that is called by admin when he wants to open the auction
        function openAuction(auction_id, button, duration) {
            $.ajax({
                url: "@Url.Action("Open", "Auction")?id=" + auction_id,
                success: function (result) {
                    console.log("Finished ajax auction open request! Result: " + result);

                    var auction_item = $(button).parent().parent();

                    $(button).parent().hide();
                    auction_item.find(".not-open-text").hide();
                    auction_item.find(".not-time-text").hide();

                    //Append new time-text
                    $('<div class="row time-text-wrapper">' +
                        '<h2 class="time-text">' + formatTime(duration) + '</h2>' +
                    '</div>')
                        .insertBefore(
                            auction_item.find(".price-row")
                        );

                    var time_text_div = auction_item.find(".time-text");

                    //Set countdown for new timetext
                    time_text_div.each(function () {
                        var that = this;

                        var timer = setInterval(function () {
                            if (that.innerHTML == "00:00:00") {

                                clearInterval(timer);

                                var correct_button = $(time_text_div).parent().parent().find(".bid-button");

                                correct_button.removeClass('btn-danger').removeClass('btn-success').addClass('btn-info');

                                if (!$(button).parent().find(".last-bidder").exists()) {
                                    correct_button.html("Expired");
                                    correct_button.parent().find(".be_first_one").hide();
                                }
                                else {
                                    correct_button.html("Sold!");
                                }
                            } else {
                                var timeToSet = formatTime(getDuration(that.innerHTML) - 1);

                                $(that).html(timeToSet);
                            }
                        }, 1000)
                    });

                    //Append new button
                    $('<button class="btn btn-danger interaction-button bid-button" disabled="disabled" onclick="bidAuction(' + auction_id + ', this)">Bid!</button>'
                        )
                        .insertBefore(
                            auction_item.find(".price-row")
                        );

                    //Append new be first one!
                    auction_item.append(
                        '<h4 class="be_first_one">Be the first one to bid!</h4>'
                    )
                },
                async: true
            });
        }

        //Keep current username, so when he bids, send it to server hub.
        var currentUserName = "@ViewBag.UserName";

        // Global function, so it's accessible, but its set when chatHub inits
        var bidAuction;

        //Raise time to 10 if its low
        function refreshTime(portfolio_item) {
            var time = portfolio_item.find(".time-text").html();

            if (getDuration(time) < 10) {
                portfolio_item.find(".time-text").html(formatTime(10));
            }
        }

        //Keep last datetime of user bid, so when new one comes it should check if its newer
        var lastDateTime = new Date();

        $(function () {
            // Declare a proxy to reference the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call to broadcast messages.
            chat.client.broadcastMessage = function (name, message) {

                //name is username, message is auction_id#datetime_of_bid
                msgs = message.split("#");
                var currDateTime = new Date(msgs[1]);
                var auction_id = msgs[0];

                if (currDateTime < lastDateTime) {
                    return;
                }
                lastDateTime = currDateTime;

                var auction_item = $("#auction-" + auction_id);

                if (auction_item.find(".last-bidder").exists()) {
                    auction_item.find(".last-bidder").html(name);
                }
                else {
                    auction_item.find(".be_first_one").hide();
                    auction_item.find(".portfolio-inside").append(
                        '<div class="row last-bidder-wrapper">' +
                                '<h4 style="display:inline;">Last bidder: </h4>' +
                                '<h4 class="last-bidder">' + name + '</h4>' +
                            '</div>');
                }

                var current_price = parseInt(auction_item.find(".current-price").html());
                auction_item.find(".current-price").html(current_price + 1);

                refreshTime(auction_item);
            };

            $.connection.hub.start().done(function () {});

            //Set bidauction here so its connected to chathub
            bidAuction = function (auction_id, button) {
                $.ajax({
                    url: "@Url.Action("Bid", "Auction")?id=" + auction_id,
                    success: function (result) {

                        //A bit hardcoded, but sentinel value (if bid is not created) is minimum datetime, so if request doesn't last for a day, this works good :)
                        var d = new Date();
                        d.setDate(d.getDate() - 1);
                        if (new Date(result) < d) {
                            $("#auction-" + auction_id).find(".interaction-button").html("Buy more tokens!");
                            $("#auction-" + auction_id).find(".interaction-button").attr("disabled", true);
                            return;
                        }

                        //Lower user tokens
                        var tokens = parseInt($(".token_count").html());
                        $(".token_count").html(tokens - 1);

                        chat.server.send(currentUserName, auction_id + "#" + result);
                    }
                });
            }
        });

        //Set search params to ones from get request
        $(function () {

            if ("@ViewBag.search_terms" != "") {
                $("#search_terms").val("@ViewBag.search_terms");
            }
            if ("@ViewBag.min_price" != "") {
                $("#min_price").val("@ViewBag.min_price");
            }
            if ("@ViewBag.max_price" != "") {
                $("#max_price").val("@ViewBag.max_price");
            }
            if ("@ViewBag.search_state" != "") {
                $('#search_state option[value=' + '@ViewBag.search_state' + ']').attr('selected', 'selected');
            }
        });

    </script>
</div>